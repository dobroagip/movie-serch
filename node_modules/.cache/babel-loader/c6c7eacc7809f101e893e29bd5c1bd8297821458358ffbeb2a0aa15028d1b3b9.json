{"ast":null,"code":"var _jsxFileName = \"/Users/user/movie-serch/movie-serch/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport MovieCard from './MovieCard';\nimport Counter from './Counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [search, setSearch] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [page, setPage] = useState(1);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [favorites, setFavorites] = useState(() => {\n    // Инициализация из localStorage\n    const savedFavorites = localStorage.getItem('favorites');\n    return savedFavorites ? JSON.parse(savedFavorites) : [];\n  });\n  const API_KEY = 'bbc1f8d1'; // Замени на свой OMDB API ключ\n\n  // Сохранение favorites в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n  const searchMovies = useCallback(async (currentPage, isLoadMore = false) => {\n    setLoading(true);\n    try {\n      const response = await fetch(`http://www.omdbapi.com/?s=${encodeURIComponent(search)}&page=${currentPage}&apikey=${API_KEY}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.Response === 'True') {\n        setMovies(prevMovies => isLoadMore ? [...prevMovies, ...data.Search] : data.Search);\n        setError('');\n      } else {\n        setMovies(isLoadMore ? movies : []);\n        setError(data.Error || 'No movies found');\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n      setMovies(isLoadMore ? movies : []);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [search, API_KEY]);\n  useEffect(() => {\n    if (search) {\n      const timeoutId = setTimeout(() => {\n        setPage(1);\n        searchMovies(1);\n      }, 500);\n      return () => clearTimeout(timeoutId);\n    } else {\n      setMovies([]);\n      setError('');\n      setPage(1);\n    }\n  }, [search, searchMovies]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '600px',\n        margin: '0 auto',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movie Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        placeholder: \"Search for a movie...\",\n        style: {\n          width: '100%',\n          padding: '10px',\n          marginBottom: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSearch('');\n          setMovies([]);\n          setError('');\n          setPage(1);\n          setSelectedMovie(null);\n          setLoading(false);\n        },\n        style: {\n          padding: '10px 20px',\n          marginBottom: '20px',\n          background: '#007bff',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px'\n        },\n        children: \"Clear Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          margin: '20px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '40px',\n            height: '40px',\n            border: '5px solid #007bff',\n            borderTop: '5px solid transparent',\n            borderRadius: '50%',\n            animation: 'spin 0.8s linear infinite'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n          children: `\n                @keyframes spin {\n                  0% { transform: rotate(0deg); }\n                  100% { transform: rotate(360deg); }\n                }\n              `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }, this), movies.length > 0 ? movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        // Уникальный ключ по imdbID\n        title: movie.Title,\n        year: movie.Year,\n        poster: movie.Poster,\n        imdbID: movie.imdbID,\n        isFavorite: favorites.some(fav => fav.imdbID === movie.imdbID),\n        toggleFavorite: () => {\n          setFavorites(favorites.some(fav => fav.imdbID === movie.imdbID) ? favorites.filter(fav => fav.imdbID !== movie.imdbID) : [...favorites, movie]);\n        },\n        onClick: async () => {\n          try {\n            setLoading(true);\n            const response = await fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=${API_KEY}`);\n            if (!response.ok) throw new Error('Failed to fetch movie details');\n            const data = await response.json();\n            if (data.Response === 'True') setSelectedMovie(data);else setError(data.Error || 'Failed to load movie details');\n          } catch (error) {\n            setError(error.message);\n          } finally {\n            setLoading(false);\n          }\n        }\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)) : !loading && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }, this), movies.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setPage(page + 1);\n          searchMovies(page + 1, true);\n        },\n        style: {\n          padding: '10px 20px',\n          marginTop: '20px',\n          background: '#007bff',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px'\n        },\n        disabled: loading,\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), favorites.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '40px',\n          borderTop: '2px solid #ccc',\n          paddingTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: '#333'\n          },\n          children: \"Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), favorites.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          // Уникальный ключ для избранного\n          title: movie.Title,\n          year: movie.Year,\n          poster: movie.Poster,\n          imdbID: movie.imdbID,\n          isFavorite: true,\n          toggleFavorite: () => {\n            setFavorites(favorites.filter(fav => fav.imdbID !== movie.imdbID));\n          },\n          onClick: async () => {\n            try {\n              setLoading(true);\n              const response = await fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=${API_KEY}`);\n              if (!response.ok) throw new Error('Failed to fetch movie details');\n              const data = await response.json();\n              if (data.Response === 'True') setSelectedMovie(data);else setError(data.Error || 'Failed to load movie details');\n            } catch (error) {\n              setError(error.message);\n            } finally {\n              setLoading(false);\n            }\n          }\n        }, `fav-${movie.imdbID}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), selectedMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          padding: '20px',\n          borderRadius: '5px',\n          maxWidth: '500px',\n          width: '90%',\n          maxHeight: '80vh',\n          overflowY: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedMovie.Title || 'No Title'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Plot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 16\n          }, this), \" \", selectedMovie.Plot || 'No Plot Available']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Director:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 16\n          }, this), \" \", selectedMovie.Director || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Actors:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 16\n          }, this), \" \", selectedMovie.Actors || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Genre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 16\n          }, this), \" \", selectedMovie.Genre || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Released:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 16\n          }, this), \" \", selectedMovie.Released || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), selectedMovie.Poster && selectedMovie.Poster !== 'N/A' && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedMovie.Poster,\n          alt: selectedMovie.Title,\n          style: {\n            maxWidth: '100%',\n            borderRadius: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedMovie(null),\n          style: {\n            padding: '10px 20px',\n            background: '#dc3545',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px'\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"shNR/6213ZRHzuMQTO8jHcJKV/M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useCallback","MovieCard","Counter","jsxDEV","_jsxDEV","App","_s","search","setSearch","movies","setMovies","error","setError","page","setPage","selectedMovie","setSelectedMovie","loading","setLoading","favorites","setFavorites","savedFavorites","localStorage","getItem","JSON","parse","API_KEY","setItem","stringify","searchMovies","currentPage","isLoadMore","response","fetch","encodeURIComponent","ok","Error","status","data","json","Response","prevMovies","Search","console","message","timeoutId","setTimeout","clearTimeout","style","position","children","maxWidth","margin","padding","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","width","marginBottom","onClick","background","color","border","borderRadius","display","justifyContent","height","borderTop","animation","length","map","movie","title","Title","year","Year","poster","Poster","imdbID","isFavorite","some","fav","toggleFavorite","filter","marginTop","disabled","paddingTop","top","left","right","bottom","backgroundColor","alignItems","zIndex","maxHeight","overflowY","Plot","Director","Actors","Genre","Released","src","alt","_c","$RefreshReg$"],"sources":["/Users/user/movie-serch/movie-serch/src/App.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport MovieCard from './MovieCard';\nimport Counter from './Counter';\n\nfunction App() {\n  const [search, setSearch] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [page, setPage] = useState(1);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [favorites, setFavorites] = useState(() => {\n    // Инициализация из localStorage\n    const savedFavorites = localStorage.getItem('favorites');\n    return savedFavorites ? JSON.parse(savedFavorites) : [];\n  });\n  const API_KEY = 'bbc1f8d1'; // Замени на свой OMDB API ключ\n\n  // Сохранение favorites в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n\n  const searchMovies = useCallback(async (currentPage, isLoadMore = false) => {\n    setLoading(true);\n    try {\n      const response = await fetch(\n        `http://www.omdbapi.com/?s=${encodeURIComponent(search)}&page=${currentPage}&apikey=${API_KEY}`\n      );\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.Response === 'True') {\n        setMovies(prevMovies => isLoadMore ? [...prevMovies, ...data.Search] : data.Search);\n        setError('');\n      } else {\n        setMovies(isLoadMore ? movies : []);\n        setError(data.Error || 'No movies found');\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n      setMovies(isLoadMore ? movies : []);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [search, API_KEY]);\n\n  useEffect(() => {\n    if (search) {\n      const timeoutId = setTimeout(() => {\n        setPage(1);\n        searchMovies(1);\n      }, 500);\n      return () => clearTimeout(timeoutId);\n    } else {\n      setMovies([]);\n      setError('');\n      setPage(1);\n    }\n  }, [search, searchMovies]);\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <div style={{ maxWidth: '600px', margin: '0 auto', padding: '20px' }}>\n        <h1>Movie Search</h1>\n        <Counter />\n        <input\n          type=\"text\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          placeholder=\"Search for a movie...\"\n          style={{ width: '100%', padding: '10px', marginBottom: '20px' }}\n        />\n        <button\n          onClick={() => {\n            setSearch('');\n            setMovies([]);\n            setError('');\n            setPage(1);\n            setSelectedMovie(null);\n            setLoading(false);\n          }}\n          style={{ padding: '10px 20px', marginBottom: '20px', background: '#007bff', color: 'white', border: 'none', borderRadius: '5px' }}\n        >\n          Clear Search\n        </button>\n        {loading && (\n          <div style={{ display: 'flex', justifyContent: 'center', margin: '20px 0' }}>\n            <div style={{\n              width: '40px',\n              height: '40px',\n              border: '5px solid #007bff',\n              borderTop: '5px solid transparent',\n              borderRadius: '50%',\n              animation: 'spin 0.8s linear infinite'\n            }} />\n            <style>\n              {`\n                @keyframes spin {\n                  0% { transform: rotate(0deg); }\n                  100% { transform: rotate(360deg); }\n                }\n              `}\n            </style>\n          </div>\n        )}\n        {error && <p style={{ color: 'red' }}>{error}</p>}\n        {movies.length > 0 ? (\n          movies.map((movie) => (\n            <MovieCard\n              key={movie.imdbID} // Уникальный ключ по imdbID\n              title={movie.Title}\n              year={movie.Year}\n              poster={movie.Poster}\n              imdbID={movie.imdbID}\n              isFavorite={favorites.some(fav => fav.imdbID === movie.imdbID)}\n              toggleFavorite={() => {\n                setFavorites(favorites.some(fav => fav.imdbID === movie.imdbID)\n                  ? favorites.filter(fav => fav.imdbID !== movie.imdbID)\n                  : [...favorites, movie]);\n              }}\n              onClick={async () => {\n                try {\n                  setLoading(true);\n                  const response = await fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=${API_KEY}`);\n                  if (!response.ok) throw new Error('Failed to fetch movie details');\n                  const data = await response.json();\n                  if (data.Response === 'True') setSelectedMovie(data);\n                  else setError(data.Error || 'Failed to load movie details');\n                } catch (error) {\n                  setError(error.message);\n                } finally {\n                  setLoading(false);\n                }\n              }}\n            />\n          ))\n        ) : (\n          !loading && !error && <p>No movies found</p>\n        )}\n        {movies.length > 0 && (\n          <button\n            onClick={() => {\n              setPage(page + 1);\n              searchMovies(page + 1, true);\n            }}\n            style={{ padding: '10px 20px', marginTop: '20px', background: '#007bff', color: 'white', border: 'none', borderRadius: '5px' }}\n            disabled={loading}\n          >\n            Load More\n          </button>\n        )}\n        {favorites.length > 0 && (\n          <div style={{ marginTop: '40px', borderTop: '2px solid #ccc', paddingTop: '20px' }}>\n            <h2 style={{ color: '#333' }}>Favorites</h2>\n            {favorites.map((movie) => (\n              <MovieCard\n                key={`fav-${movie.imdbID}`} // Уникальный ключ для избранного\n                title={movie.Title}\n                year={movie.Year}\n                poster={movie.Poster}\n                imdbID={movie.imdbID}\n                isFavorite={true}\n                toggleFavorite={() => {\n                  setFavorites(favorites.filter(fav => fav.imdbID !== movie.imdbID));\n                }}\n                onClick={async () => {\n                  try {\n                    setLoading(true);\n                    const response = await fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=${API_KEY}`);\n                    if (!response.ok) throw new Error('Failed to fetch movie details');\n                    const data = await response.json();\n                    if (data.Response === 'True') setSelectedMovie(data);\n                    else setError(data.Error || 'Failed to load movie details');\n                  } catch (error) {\n                    setError(error.message);\n                  } finally {\n                    setLoading(false);\n                  }\n                }}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n      {selectedMovie && (\n        <div\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            zIndex: 1000,\n          }}\n        >\n          <div\n            style={{\n              backgroundColor: 'white',\n              padding: '20px',\n              borderRadius: '5px',\n              maxWidth: '500px',\n              width: '90%',\n              maxHeight: '80vh',\n              overflowY: 'auto',\n            }}\n          >\n            <h2>{selectedMovie.Title || 'No Title'}</h2>\n            <p><strong>Plot:</strong> {selectedMovie.Plot || 'No Plot Available'}</p>\n            <p><strong>Director:</strong> {selectedMovie.Director || 'N/A'}</p>\n            <p><strong>Actors:</strong> {selectedMovie.Actors || 'N/A'}</p>\n            <p><strong>Genre:</strong> {selectedMovie.Genre || 'N/A'}</p>\n            <p><strong>Released:</strong> {selectedMovie.Released || 'N/A'}</p>\n            {selectedMovie.Poster && selectedMovie.Poster !== 'N/A' && (\n              <img src={selectedMovie.Poster} alt={selectedMovie.Title} style={{ maxWidth: '100%', borderRadius: '5px' }} />\n            )}\n            <button\n              onClick={() => setSelectedMovie(null)}\n              style={{ padding: '10px 20px', background: '#dc3545', color: 'white', border: 'none', borderRadius: '5px' }}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}