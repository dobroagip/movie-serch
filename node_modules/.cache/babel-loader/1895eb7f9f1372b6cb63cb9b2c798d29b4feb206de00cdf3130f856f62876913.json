{"ast":null,"code":"var _jsxFileName = \"/Users/user/movie-serch/movie-serch/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport MovieCard from './MovieCard';\nimport Counter from './Counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [search, setSearch] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [page, setPage] = useState(1); // Добавлено состояние page\n  const API_KEY = 'bbc1f8d1'; // Замени на свой OMDB API ключ\n\n  const searchMovies = useCallback(async () => {\n    try {\n      const response = await fetch(`http://www.omdbapi.com/?s=${encodeURIComponent(search)}&page=${page}&apikey=${API_KEY}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.Response === 'True') {\n        setMovies(data.Search);\n        setError('');\n      } else {\n        setMovies([]);\n        setError(data.Error || 'No movies found');\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n      setMovies([]);\n      setError(error.message);\n    }\n  }, [search, page, API_KEY]);\n  useEffect(() => {\n    if (search) searchMovies();\n  }, [search, page, searchMovies]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: '0 auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: search,\n      onChange: e => setSearch(e.target.value),\n      placeholder: \"Search for a movie...\",\n      style: {\n        width: '100%',\n        padding: '10px',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setSearch('');\n        setMovies([]);\n        setError('');\n        setPage(1); // Сбрасываем страницу\n      },\n      style: {\n        padding: '10px 20px',\n        marginBottom: '20px'\n      },\n      children: \"Clear Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), movies.length > 0 ? movies.map((movie, index) => /*#__PURE__*/_jsxDEV(MovieCard, {\n      title: movie.Title,\n      year: movie.Year,\n      poster: movie.Poster,\n      imdbID: movie.imdbID,\n      onClick: async () => {\n        const response = await fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=${API_KEY}`);\n        const data = await response.json();\n        alert(`Title: ${data.Title}\\nPlot: ${data.Plot}`);\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this)) : !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }, this), movies.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPage(page + 1),\n      style: {\n        padding: '10px 20px',\n        marginTop: '20px'\n      },\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WP7JGHBer0xQAfp8COj/QENk0x4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useCallback","MovieCard","Counter","jsxDEV","_jsxDEV","App","_s","search","setSearch","movies","setMovies","error","setError","page","setPage","API_KEY","searchMovies","response","fetch","encodeURIComponent","ok","Error","status","data","json","Response","Search","console","message","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","width","marginBottom","onClick","color","length","map","movie","index","title","Title","year","Year","poster","Poster","imdbID","alert","Plot","marginTop","_c","$RefreshReg$"],"sources":["/Users/user/movie-serch/movie-serch/src/App.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport MovieCard from './MovieCard';\nimport Counter from './Counter';\n\nfunction App() {\n  const [search, setSearch] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [page, setPage] = useState(1); // Добавлено состояние page\n  const API_KEY = 'bbc1f8d1'; // Замени на свой OMDB API ключ\n\n  const searchMovies = useCallback(async () => {\n    try {\n      const response = await fetch(\n        `http://www.omdbapi.com/?s=${encodeURIComponent(search)}&page=${page}&apikey=${API_KEY}`\n      );\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.Response === 'True') {\n        setMovies(data.Search);\n        setError('');\n      } else {\n        setMovies([]);\n        setError(data.Error || 'No movies found');\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n      setMovies([]);\n      setError(error.message);\n    }\n  }, [search, page, API_KEY]);\n\n  useEffect(() => {\n    if (search) searchMovies();\n  }, [search, page, searchMovies]);\n\n  return (\n    <div style={{ maxWidth: '600px', margin: '0 auto', padding: '20px' }}>\n      <h1>Movie Search</h1>\n      <Counter />\n      <input\n        type=\"text\"\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n        placeholder=\"Search for a movie...\"\n        style={{ width: '100%', padding: '10px', marginBottom: '20px' }}\n      />\n      <button\n        onClick={() => {\n          setSearch('');\n          setMovies([]);\n          setError('');\n          setPage(1); // Сбрасываем страницу\n        }}\n        style={{ padding: '10px 20px', marginBottom: '20px' }}\n      >\n        Clear Search\n      </button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {movies.length > 0 ? (\n        movies.map((movie, index) => (\n          <MovieCard\n            key={index}\n            title={movie.Title}\n            year={movie.Year}\n            poster={movie.Poster}\n            imdbID={movie.imdbID}\n            onClick={async () => {\n              const response = await fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=${API_KEY}`);\n              const data = await response.json();\n              alert(`Title: ${data.Title}\\nPlot: ${data.Plot}`);\n            }}\n          />\n        ))\n      ) : (\n        !error && <p>No movies found</p>\n      )}\n      {movies.length > 0 && (\n        <button\n          onClick={() => setPage(page + 1)}\n          style={{ padding: '10px 20px', marginTop: '20px' }}\n        >\n          Load More\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}