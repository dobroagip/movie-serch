{"ast":null,"code":"var _jsxFileName = \"/Users/user/movie-serch/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport MovieCard from './MovieCard';\nimport Counter from './Counter';\nimport styles from './App.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [genre, setGenre] = useState('');\n  const [search, setSearch] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [page, setPage] = useState(1);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Инициализация favorites с использованием useState и localStorage\n  const [favorites, setFavorites] = useState(() => {\n    const savedFavorites = localStorage.getItem('favorites');\n    return savedFavorites ? JSON.parse(savedFavorites) : [];\n  });\n  const API_KEY = 'bbc1f8d1'; // Замени на свой OMDB API ключ\n\n  // Сохранение favorites в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n\n  // Функция поиска фильмов с использованием useCallback\n  const searchMovies = useCallback(async (currentPage, isLoadMore = false) => {\n    setLoading(true);\n    try {\n      const response = await fetch(`http://www.omdbapi.com/?s=${encodeURIComponent(search)}&page=${currentPage}&apikey=${API_KEY}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.Response === 'True') {\n        // Получаем полные данные для каждого фильма\n        const moviePromises = data.Search.map(async movie => {\n          const detailResponse = await fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=${API_KEY}`);\n          const detailData = await detailResponse.json();\n          return detailData.Response === 'True' ? detailData : movie;\n        });\n        const detailedMovies = await Promise.all(moviePromises);\n        let filteredMovies = detailedMovies;\n        if (genre) {\n          filteredMovies = detailedMovies.filter(movie => {\n            return movie.Genre && movie.Genre.split(',').some(g => g.trim().toLowerCase() === genre.toLowerCase());\n          });\n        }\n        setMovies(prevMovies => isLoadMore ? [...prevMovies, ...filteredMovies] : filteredMovies);\n        setError('');\n      } else {\n        setMovies(isLoadMore ? movies : []);\n        setError(data.Error || 'No movies found');\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n      setMovies(isLoadMore ? movies : []);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [search, genre, API_KEY]);\n\n  // Эффект для поиска при изменении search или genre\n  useEffect(() => {\n    if (search || genre) {\n      const timeoutId = setTimeout(() => {\n        setPage(1);\n        searchMovies(1, false);\n      }, 500);\n      return () => clearTimeout(timeoutId);\n    } else {\n      setMovies([]);\n      setError('');\n      setPage(1);\n    }\n  }, [search, genre, searchMovies]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nav,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movie Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: genre,\n      onChange: e => setGenre(e.target.value),\n      className: styles.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"action\",\n        children: \"Action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"comedy\",\n        children: \"Comedy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"drama\",\n        children: \"Drama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"fantasy\",\n        children: \"Fantasy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: search,\n      onChange: e => setSearch(e.target.value),\n      placeholder: \"Search for a movie...\",\n      className: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setSearch('');\n        setGenre('');\n        setMovies([]);\n        setError('');\n        setPage(1);\n        setSelectedMovie(null);\n        setLoading(false);\n      },\n      className: styles.button,\n      children: \"Clear Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        margin: '20px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this), movies.length > 0 ? movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n      title: movie.Title,\n      year: movie.Year,\n      poster: movie.Poster,\n      imdbID: movie.imdbID,\n      isFavorite: favorites.some(fav => fav.imdbID === movie.imdbID),\n      toggleFavorite: () => {\n        setFavorites(favorites.some(fav => fav.imdbID === movie.imdbID) ? favorites.filter(fav => fav.imdbID !== movie.imdbID) : [...favorites, movie]);\n      },\n      onClick: async () => {\n        try {\n          setLoading(true);\n          const response = await fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=${API_KEY}`);\n          if (!response.ok) throw new Error('Failed to fetch movie details');\n          const data = await response.json();\n          if (data.Response === 'True') setSelectedMovie(data);else setError(data.Error || 'Failed to load movie details');\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setLoading(false);\n        }\n      }\n    }, movie.imdbID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }, this)) : !loading && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 31\n    }, this), movies.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPage(page + 1);\n        searchMovies(page + 1, true);\n      },\n      className: styles.button,\n      disabled: loading,\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), favorites.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '40px',\n        borderTop: '2px solid #ccc',\n        paddingTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: '#333'\n        },\n        children: \"Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), favorites.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        title: movie.Title,\n        year: movie.Year,\n        poster: movie.Poster,\n        imdbID: movie.imdbID,\n        isFavorite: true,\n        toggleFavorite: () => {\n          setFavorites(favorites.filter(fav => fav.imdbID !== movie.imdbID));\n        },\n        onClick: async () => {\n          try {\n            setLoading(true);\n            const response = await fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=${API_KEY}`);\n            if (!response.ok) throw new Error('Failed to fetch movie details');\n            const data = await response.json();\n            if (data.Response === 'True') setSelectedMovie(data);else setError(data.Error || 'Failed to load movie details');\n          } catch (error) {\n            setError(error.message);\n          } finally {\n            setLoading(false);\n          }\n        }\n      }, `fav-${movie.imdbID}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), selectedMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          padding: '20px',\n          borderRadius: '5px',\n          maxWidth: '500px',\n          width: '90%',\n          maxHeight: '80vh',\n          overflowY: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedMovie.Title || 'No Title'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Plot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 16\n          }, this), \" \", selectedMovie.Plot || 'No Plot Available']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Director:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 16\n          }, this), \" \", selectedMovie.Director || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Actors:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 16\n          }, this), \" \", selectedMovie.Actors || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Genre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 16\n          }, this), \" \", selectedMovie.Genre || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Released:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 16\n          }, this), \" \", selectedMovie.Released || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), selectedMovie.Poster && selectedMovie.Poster !== 'N/A' && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedMovie.Poster,\n          alt: selectedMovie.Title,\n          style: {\n            maxWidth: '100%',\n            borderRadius: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          onClick: () => setSelectedMovie(null),\n          style: {\n            background: '#dc3545',\n            color: 'white'\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pTNAtdqNRUR6zcliNIt4s92CiC8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useCallback","MovieCard","Counter","styles","jsxDEV","_jsxDEV","App","_s","genre","setGenre","search","setSearch","movies","setMovies","error","setError","page","setPage","selectedMovie","setSelectedMovie","loading","setLoading","favorites","setFavorites","savedFavorites","localStorage","getItem","JSON","parse","API_KEY","setItem","stringify","searchMovies","currentPage","isLoadMore","response","fetch","encodeURIComponent","ok","Error","status","data","json","Response","moviePromises","Search","map","movie","detailResponse","imdbID","detailData","detailedMovies","Promise","all","filteredMovies","filter","Genre","split","some","g","trim","toLowerCase","prevMovies","console","message","timeoutId","setTimeout","clearTimeout","className","container","children","nav","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","select","type","placeholder","input","onClick","button","style","display","justifyContent","margin","loader","color","length","title","Title","year","Year","poster","Poster","isFavorite","fav","toggleFavorite","disabled","marginTop","borderTop","paddingTop","position","top","left","right","bottom","backgroundColor","alignItems","zIndex","padding","borderRadius","maxWidth","width","maxHeight","overflowY","Plot","Director","Actors","Released","src","alt","background","_c","$RefreshReg$"],"sources":["/Users/user/movie-serch/src/App.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport MovieCard from './MovieCard';\nimport Counter from './Counter';\nimport styles from './App.module.css';\n\nfunction App() {\n  const [genre, setGenre] = useState('');\n  const [search, setSearch] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [page, setPage] = useState(1);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Инициализация favorites с использованием useState и localStorage\n  const [favorites, setFavorites] = useState(() => {\n    const savedFavorites = localStorage.getItem('favorites');\n    return savedFavorites ? JSON.parse(savedFavorites) : [];\n  });\n\n  const API_KEY = 'bbc1f8d1'; // Замени на свой OMDB API ключ\n\n  // Сохранение favorites в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n\n  // Функция поиска фильмов с использованием useCallback\n  const searchMovies = useCallback(async (currentPage, isLoadMore = false) => {\n    setLoading(true);\n    try {\n      const response = await fetch(\n        `http://www.omdbapi.com/?s=${encodeURIComponent(search)}&page=${currentPage}&apikey=${API_KEY}`\n      );\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.Response === 'True') {\n        // Получаем полные данные для каждого фильма\n        const moviePromises = data.Search.map(async (movie) => {\n          const detailResponse = await fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=${API_KEY}`);\n          const detailData = await detailResponse.json();\n          return detailData.Response === 'True' ? detailData : movie;\n        });\n        const detailedMovies = await Promise.all(moviePromises);\n\n        let filteredMovies = detailedMovies;\n        if (genre) {\n          filteredMovies = detailedMovies.filter(movie => {\n            return movie.Genre && movie.Genre.split(',').some(g => g.trim().toLowerCase() === genre.toLowerCase());\n          });\n        }\n        setMovies(prevMovies => isLoadMore ? [...prevMovies, ...filteredMovies] : filteredMovies);\n        setError('');\n      } else {\n        setMovies(isLoadMore ? movies : []);\n        setError(data.Error || 'No movies found');\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n      setMovies(isLoadMore ? movies : []);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [search, genre, API_KEY]);\n\n  // Эффект для поиска при изменении search или genre\n  useEffect(() => {\n    if (search || genre) {\n      const timeoutId = setTimeout(() => {\n        setPage(1);\n        searchMovies(1, false);\n      }, 500);\n      return () => clearTimeout(timeoutId);\n    } else {\n      setMovies([]);\n      setError('');\n      setPage(1);\n    }\n  }, [search, genre, searchMovies]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.nav}>\n        <h1>Movie Search</h1>\n        <Counter />\n      </div>\n      <select\n        value={genre}\n        onChange={(e) => setGenre(e.target.value)}\n        className={styles.select}\n      >\n        <option value=\"\">All Genres</option>\n        <option value=\"action\">Action</option>\n        <option value=\"comedy\">Comedy</option>\n        <option value=\"drama\">Drama</option>\n        <option value=\"fantasy\">Fantasy</option>\n      </select>\n      <input\n        type=\"text\"\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n        placeholder=\"Search for a movie...\"\n        className={styles.input}\n      />\n      <button\n        onClick={() => {\n          setSearch('');\n          setGenre('');\n          setMovies([]);\n          setError('');\n          setPage(1);\n          setSelectedMovie(null);\n          setLoading(false);\n        }}\n        className={styles.button}\n      >\n        Clear Search\n      </button>\n      {loading && (\n        <div style={{ display: 'flex', justifyContent: 'center', margin: '20px 0' }}>\n          <div className={styles.loader} />\n        </div>\n      )}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {movies.length > 0 ? (\n        movies.map((movie) => (\n          <MovieCard\n            key={movie.imdbID}\n            title={movie.Title}\n            year={movie.Year}\n            poster={movie.Poster}\n            imdbID={movie.imdbID}\n            isFavorite={favorites.some(fav => fav.imdbID === movie.imdbID)}\n            toggleFavorite={() => {\n              setFavorites(favorites.some(fav => fav.imdbID === movie.imdbID)\n                ? favorites.filter(fav => fav.imdbID !== movie.imdbID)\n                : [...favorites, movie]);\n            }}\n            onClick={async () => {\n              try {\n                setLoading(true);\n                const response = await fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=${API_KEY}`);\n                if (!response.ok) throw new Error('Failed to fetch movie details');\n                const data = await response.json();\n                if (data.Response === 'True') setSelectedMovie(data);\n                else setError(data.Error || 'Failed to load movie details');\n              } catch (error) {\n                setError(error.message);\n              } finally {\n                setLoading(false);\n              }\n            }}\n          />\n        ))\n      ) : (\n        !loading && !error && <p>No movies found</p>\n      )}\n      {movies.length > 0 && (\n        <button\n          onClick={() => {\n            setPage(page + 1);\n            searchMovies(page + 1, true);\n          }}\n          className={styles.button}\n          disabled={loading}\n        >\n          Load More\n        </button>\n      )}\n      {favorites.length > 0 && (\n        <div style={{ marginTop: '40px', borderTop: '2px solid #ccc', paddingTop: '20px' }}>\n          <h2 style={{ color: '#333' }}>Favorites</h2>\n          {favorites.map((movie) => (\n            <MovieCard\n              key={`fav-${movie.imdbID}`}\n              title={movie.Title}\n              year={movie.Year}\n              poster={movie.Poster}\n              imdbID={movie.imdbID}\n              isFavorite={true}\n              toggleFavorite={() => {\n                setFavorites(favorites.filter(fav => fav.imdbID !== movie.imdbID));\n              }}\n              onClick={async () => {\n                try {\n                  setLoading(true);\n                  const response = await fetch(`http://www.omdbapi.com/?i=${movie.imdbID}&apikey=${API_KEY}`);\n                  if (!response.ok) throw new Error('Failed to fetch movie details');\n                  const data = await response.json();\n                  if (data.Response === 'True') setSelectedMovie(data);\n                  else setError(data.Error || 'Failed to load movie details');\n                } catch (error) {\n                  setError(error.message);\n                } finally {\n                  setLoading(false);\n                }\n              }}\n            />\n          ))}\n        </div>\n      )}\n      {selectedMovie && (\n        <div\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            zIndex: 1000,\n          }}\n        >\n          <div\n            style={{\n              backgroundColor: 'white',\n              padding: '20px',\n              borderRadius: '5px',\n              maxWidth: '500px',\n              width: '90%',\n              maxHeight: '80vh',\n              overflowY: 'auto',\n            }}\n          >\n            <h2>{selectedMovie.Title || 'No Title'}</h2>\n            <p><strong>Plot:</strong> {selectedMovie.Plot || 'No Plot Available'}</p>\n            <p><strong>Director:</strong> {selectedMovie.Director || 'N/A'}</p>\n            <p><strong>Actors:</strong> {selectedMovie.Actors || 'N/A'}</p>\n            <p><strong>Genre:</strong> {selectedMovie.Genre || 'N/A'}</p>\n            <p><strong>Released:</strong> {selectedMovie.Released || 'N/A'}</p>\n            {selectedMovie.Poster && selectedMovie.Poster !== 'N/A' && (\n              <img src={selectedMovie.Poster} alt={selectedMovie.Title} style={{ maxWidth: '100%', borderRadius: '5px' }} />\n            )}\n            <button\n              className={styles.button}\n              onClick={() => setSelectedMovie(null)}\n              style={{ background: '#dc3545', color: 'white' }}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}